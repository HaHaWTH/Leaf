From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <dev@alpha93.kr>
Date: Wed, 27 Sep 2023 18:29:51 +0900
Subject: [PATCH] Plazma: Add some missing Pufferfish configurations

Original license: MIT
Original project: https://github.com/PlazmaMC/PlazmaBukkit

Add Pufferfish DAB support for Camel, Sniffer
https://github.com/pufferfish-gg/Pufferfish/issues/83

diff --git a/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java b/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
index 877fe6312051f2669360b85c0caded7b47f04866..17c0e7fc08621d30bc8398a5063f9dbb9d917f57 100644
--- a/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
+++ b/src/main/java/net/minecraft/world/entity/animal/armadillo/Armadillo.java
@@ -128,8 +128,10 @@ public class Armadillo extends Animal {
         return ArmadilloAi.makeBrain(this.brainProvider().makeBrain(dynamic));
     }
 
+    private int behaviorTick; // Leaf - Plazma - Add missing Pufferfish configurations
     @Override
     protected void customServerAiStep() {
+        if (this.behaviorTick++ % this.activatedPriority == 0) // Leaf - Plazma - Add missing Pufferfish configurations
         ((Brain<Armadillo>) this.brain).tick((ServerLevel) this.level(), this); // CraftBukkit - decompile error
         ArmadilloAi.updateActivity(this);
         if (this.isAlive() && !this.isBaby() && --this.scuteTime <= 0) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
index 041def64118a5b8ed96e9982b2ed645dd9a8822a..c6eee4df07f9c5122504e5c9d5ad0465728ad48c 100644
--- a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
+++ b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
@@ -149,10 +149,12 @@ public class Camel extends AbstractHorse implements PlayerRideableJumping, Saddl
         return pose == Pose.SITTING ? Camel.SITTING_DIMENSIONS.scale(this.getAgeScale()) : super.getDefaultDimensions(pose);
     }
 
+    private int behaviorTick = 0; // Leaf - Plazma - Add missing Pufferfish configurations
     @Override
     protected void customServerAiStep() {
         Brain<Camel> behaviorcontroller = (Brain<Camel>) this.getBrain(); // CraftBukkit - decompile error
 
+        if (this.behaviorTick++ % this.activatedPriority == 0) // Leaf - Plazma - Add missing Pufferfish configurations
         behaviorcontroller.tick((ServerLevel) this.level(), this);
         CamelAi.updateActivity(this);
         super.customServerAiStep();
diff --git a/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java b/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
index 9325dcc7e5af135ad6e44983e0e1dda5504a26d0..8d01aeec5daa9da49338dd77173c7757d36a68a8 100644
--- a/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
+++ b/src/main/java/net/minecraft/world/entity/animal/sniffer/Sniffer.java
@@ -502,8 +502,10 @@ public class Sniffer extends Animal {
         return Brain.provider(SnifferAi.MEMORY_TYPES, SnifferAi.SENSOR_TYPES);
     }
 
+    private int behaviorTick; // Leaf - Plazma - Add missing Pufferfish configurations
     @Override
     protected void customServerAiStep() {
+        if (this.behaviorTick++ % this.activatedPriority == 0) // Leaf - Plazma - Add missing Pufferfish configurations
         this.getBrain().tick((ServerLevel) this.level(), this);
         SnifferAi.updateActivity(this);
         super.customServerAiStep();
